import unittest
from event import Event

data1 = [(1611330113.866415, 798, 200), (1611330113.872132, 790, 268), (1611330113.886407, 780, 290), (1611330113.891287, 770, 243), (1611330113.906759, 713, 3732), (1611330113.912672, 690, 7643), (1611330113.922061, 679, 4935), (1611330113.936946, 668, 6732), (1611330113.947138, 658, 10181), (1611330113.955433, 647, 13283), (1611330113.95965, 636, 14279), (1611330113.97085, 625, 14698), (1611330113.986711, 615, 16659), (1611330113.989782, 604, 18199), (1611330114.004019, 594, 18048), (1611330114.010409, 585, 18524), (1611330114.01967, 575, 14564), (1611330114.030641, 565, 9463), (1611330114.042567, 556, 5826), (1611330114.054683, 547, 5714), (1611330114.061064, 540, 1768), (1611330114.077835, 536, 770), (1611330114.087101, 530, 513), (1611330114.091696, 523, 600), (1611330114.105431, 514, 1405), (1611330114.118515, 505, 3420), (1611330114.123037, 493, 2024), (1611330114.138365, 491, 2510), (1611330114.146226, 484, 3654), (1611330114.154719, 473, 3351), (1611330114.160844, 462, 2595), (1611330114.171583, 458, 5537), (1611330114.18875, 449, 4473), (1611330114.189749, 440, 1424), (1611330114.203587, 438, 421), (1611330114.212605, 433, 296), (1611330114.222787, 427, 309), (1611330114.233332, 428, 282), (1611330114.244409, 432, 369), (1611330114.253403, 430, 476), (1611330114.265963, 428, 454), (1611330114.273371, 427, 428), (1611330114.283808, 426, 352), (1611330114.293689, 424, 284), (1611330114.309401, 425, 209), (1611330114.315264, 425, 145), (1611330114.329899, 424, 118), (1611330114.339685, 425, 101), (1611330114.344043, 425, 94), (1611330114.358308, 426, 94), (1611330114.369447, 427, 92), (1611330114.380095, 427, 101), (1611330114.387847, 427, 91), (1611330114.395466, 429, 98), (1611330114.410449, 429, 136), (1611330114.419411, 429, 140), (1611330114.421405, 428, 97), (1611330114.4372, 429, 83), (1611330114.443607, 430, 79), (1611330114.457199, 431, 79), (1611330114.464208, 431, 81), (1611330114.475373, 432, 75), (1611330114.484951, 433, 87), (1611330114.495166, 434, 102), (1611330114.505201, 434, 153), (1611330114.51613, 435, 291), (1611330114.52508, 437, 456), (1611330114.540752, 434, 565), (1611330114.550702, 431, 570), (1611330114.554896, 427, 481), (1611330114.57092, 423, 335), (1611330114.581602, 423, 139)]
data2 = [(1611330112.238344, 818, 130), (1611330112.250477, 828, 249), (1611330112.260074, 831, 387), (1611330112.275707, 822, 567), (1611330112.28261, 811, 779), (1611330112.295747, 797, 986), (1611330112.305927, 783, 1136), (1611330112.316429, 767, 1616), (1611330112.326123, 748, 7973), (1611330112.335593, 734, 8435), (1611330112.345348, 724, 4741), (1611330112.35541, 713, 6438), (1611330112.364006, 702, 7578), (1611330112.373038, 691, 9543), (1611330112.379028, 681, 12280), (1611330112.389908, 670, 13938), (1611330112.406778, 660, 15076), (1611330112.407775, 650, 15927), (1611330112.42425, 639, 17006), (1611330112.430209, 628, 17412), (1611330112.439726, 618, 15037), (1611330112.450582, 608, 11296), (1611330112.462325, 600, 7193), (1611330112.470097, 590, 3862), (1611330112.48715, 580, 9013), (1611330112.490727, 571, 6128), (1611330112.507017, 562, 7030), (1611330112.513515, 552, 6530), (1611330112.521221, 542, 6683), (1611330112.537371, 535, 5408), (1611330112.547084, 527, 4424), (1611330112.55764, 519, 3989), (1611330112.564894, 511, 3479), (1611330112.573414, 503, 3506), (1611330112.587611, 495, 3699), (1611330112.598218, 488, 4003), (1611330112.606277, 481, 4446), (1611330112.610476, 474, 4793), (1611330112.622137, 468, 4977), (1611330112.63812, 461, 4323), (1611330112.641237, 455, 2944), (1611330112.655519, 451, 1532), (1611330112.663381, 451, 712), (1611330112.672871, 454, 509), (1611330112.683387, 456, 443), (1611330112.698866, 464, 411), (1611330112.70883, 469, 417), (1611330112.712992, 472, 483), (1611330112.723671, 469, 813), (1611330112.738976, 464, 1464), (1611330112.749075, 460, 2033), (1611330112.758424, 457, 2532), (1611330112.761616, 456, 2767), (1611330112.778808, 455, 2862), (1611330112.788541, 454, 2874), (1611330112.799617, 454, 2863), (1611330112.806188, 453, 2853), (1611330112.813926, 453, 2839), (1611330112.829483, 453, 2821), (1611330112.83947, 453, 2800), (1611330112.842277, 453, 2796), (1611330112.855529, 453, 2805), (1611330112.862772, 453, 2808), (1611330112.873114, 453, 2776), (1611330112.883109, 453, 2735), (1611330112.893462, 454, 2694), (1611330112.904539, 454, 2662), (1611330112.91577, 454, 2672), (1611330112.924937, 455, 2702), (1611330112.93739, 453, 2344), (1611330112.944164, 450, 1607), (1611330112.96034, 450, 855), (1611330112.965888, 454, 528), (1611330112.980145, 459, 445), (1611330112.990495, 465, 456), (1611330112.996372, 473, 538), (1611330113.009984, 475, 677), (1611330113.020555, 472, 734), (1611330113.030863, 468, 870), (1611330113.040876, 464, 801), (1611330113.047079, 462, 539), (1611330113.061395, 462, 315), (1611330113.070552, 463, 146), (1611330113.073685, 465, 72)]
data3 = [(1611329806.225139, 1051, 71), (1611329806.230707, 1052, 85), (1611329806.241483, 1052, 110), (1611329806.258201, 1053, 159), (1611329806.2592, 1054, 439), (1611329806.273791, 1049, 984), (1611329806.282463, 1053, 1387), (1611329806.296279, 1060, 939), (1611329806.302692, 1067, 1186), (1611329806.313776, 1076, 1895), (1611329806.322512, 1087, 2905), (1611329806.33847, 1098, 3158), (1611329806.342212, 1109, 7556), (1611329806.358972, 1122, 5494), (1611329806.369031, 1133, 3608), (1611329806.379204, 1145, 2993), (1611329806.388688, 1154, 3742), (1611329806.398795, 1166, 2836), (1611329806.406402, 1174, 3442), (1611329806.415711, 1184, 10251), (1611329806.423918, 1195, 9264), (1611329806.439404, 1205, 7114), (1611329806.441865, 1218, 4279), (1611329806.456789, 1232, 1715), (1611329806.462784, 1235, 410), (1611329806.473346, 1239, 226), (1611329806.482957, 1246, 214), (1611329806.493241, 1256, 230), (1611329806.505803, 1267, 227), (1611329806.514329, 1273, 192), (1611329806.524708, 1281, 189), (1611329806.540376, 1295, 222), (1611329806.546977, 1311, 226), (1611329806.559858, 1330, 248), (1611329806.566666, 1352, 288), (1611329806.579725, 1381, 492), (1611329806.590042, 1407, 1170), (1611329806.598422, 1424, 2052), (1611329806.60732, 1437, 2518), (1611329806.615056, 1450, 3117), (1611329806.630033, 1462, 3367), (1611329806.64081, 1474, 2538), (1611329806.643209, 1487, 2365), (1611329806.659496, 1505, 1116), (1611329806.667041, 1515, 193)]
data4 = [(1611329826.492835, 816, 114), (1611329826.507255, 812, 170), (1611329826.520281, 793, 250), (1611329826.530221, 735, 1603), (1611329826.540154, 703, 6558), (1611329826.550616, 687, 9604), (1611329826.558686, 672, 15251), (1611329826.561164, 658, 14184), (1611329826.574418, 646, 4630), (1611329826.590738, 631, 3984), (1611329826.594051, 617, 4538), (1611329826.606726, 603, 5395), (1611329826.615314, 588, 5351), (1611329826.626405, 575, 3803), (1611329826.635459, 562, 2753), (1611329826.645489, 548, 6112), (1611329826.656523, 533, 7749), (1611329826.670763, 517, 7234), (1611329826.676262, 505, 3500), (1611329826.690517, 492, 2796), (1611329826.693683, 479, 3024), (1611329826.707958, 470, 1552), (1611329826.721217, 467, 674), (1611329826.726219, 461, 477), (1611329826.741659, 456, 263), (1611329826.74762, 455, 146), (1611329826.761794, 455, 80), (1611329826.791782, 442, 284), (1611329826.793587, 422, 939), (1611329826.806416, 414, 856), (1611329826.814086, 413, 1082), (1611329826.825016, 413, 1121), (1611329826.833192, 411, 856), (1611329826.84677, 406, 597), (1611329826.854766, 404, 386), (1611329826.872534, 406, 269), (1611329826.875037, 407, 212), (1611329826.888947, 408, 177), (1611329826.902673, 408, 160), (1611329826.913096, 408, 147), (1611329826.914095, 409, 141), (1611329826.932816, 409, 154), (1611329826.939814, 409, 184), (1611329826.948366, 409, 177), (1611329826.962885, 409, 149), (1611329826.973185, 409, 140), (1611329826.980909, 410, 134), (1611329826.990445, 411, 126), (1611329826.993921, 411, 129), (1611329827.006867, 412, 176), (1611329827.022705, 413, 310), (1611329827.031466, 419, 1855), (1611329827.034648, 410, 1852), (1611329827.047138, 409, 1097), (1611329827.055842, 409, 1056), (1611329827.073796, 409, 750), (1611329827.078526, 408, 521), (1611329827.093624, 411, 302), (1611329827.09949, 412, 135)]
data5 = [(1611329833.72101, 736, 738), (1611329833.737375, 718, 885), (1611329833.740693, 683, 1766), (1611329833.752672, 644, 6641), (1611329833.76747, 628, 5110), (1611329833.770134, 613, 7625), (1611329833.785375, 600, 9859), (1611329833.790843, 585, 9087), (1611329833.801467, 572, 7973), (1611329833.811304, 559, 6869), (1611329833.821864, 545, 7555), (1611329833.832028, 532, 6863), (1611329833.8432, 520, 4045), (1611329833.850532, 505, 4745), (1611329833.86221, 498, 1105), (1611329833.872295, 488, 930), (1611329833.888381, 468, 3876), (1611329833.893646, 458, 3887), (1611329833.908493, 451, 3560), (1611329833.918453, 442, 2022), (1611329833.919453, 435, 1790), (1611329833.938578, 428, 2982), (1611329833.940617, 415, 1943), (1611329833.956268, 406, 663), (1611329833.967638, 400, 270), (1611329833.971525, 399, 139), (1611329833.984389, 399, 89), (1611329833.998991, 398, 132), (1611329834.001237, 394, 291), (1611329834.019132, 387, 419), (1611329834.024936, 380, 391), (1611329834.032243, 376, 255), (1611329834.042249, 376, 144), (1611329834.052265, 375, 115), (1611329834.062349, 376, 84), (1611329834.072551, 378, 74), (1611329834.083053, 379, 74), (1611329834.095658, 378, 69), (1611329834.102576, 378, 68), (1611329834.119376, 378, 75), (1611329834.129512, 378, 89), (1611329834.137811, 378, 79), (1611329834.149893, 378, 82), (1611329834.160422, 377, 72), (1611329834.167779, 377, 75), (1611329834.173751, 378, 72), (1611329834.185208, 378, 69), (1611329834.200461, 379, 145), (1611329834.21059, 381, 269), (1611329834.216834, 381, 340), (1611329834.222934, 377, 306), (1611329834.233981, 377, 205), (1611329834.250395, 378, 88)]
data6 = [(1611329798.477872, 702, 69), (1611329798.48284, 714, 96), (1611329798.498044, 774, 226), (1611329798.508103, 864, 691), (1611329798.518411, 891, 1671), (1611329798.528083, 901, 2875), (1611329798.531255, 912, 4100), (1611329798.548607, 924, 4978), (1611329798.549606, 937, 5299), (1611329798.562457, 950, 7113), (1611329798.570558, 962, 7170), (1611329798.582607, 975, 7017), (1611329798.590761, 987, 10061), (1611329798.602849, 1000, 13013), (1611329798.61284, 1012, 14881), (1611329798.628734, 1025, 11882), (1611329798.63877, 1039, 8090), (1611329798.646826, 1052, 4664), (1611329798.658345, 1068, 1297), (1611329798.669098, 1078, 364), (1611329798.678507, 1094, 317), (1611329798.683456, 1124, 629), (1611329798.699081, 1154, 1054), (1611329798.701664, 1168, 1650), (1611329798.719244, 1182, 1997), (1611329798.728579, 1195, 1684), (1611329798.731041, 1206, 1722), (1611329798.746438, 1217, 1781), (1611329798.751369, 1227, 1732), (1611329798.761572, 1236, 5792), (1611329798.770802, 1247, 12053), (1611329798.784473, 1260, 4861), (1611329798.795635, 1277, 12484), (1611329798.804341, 1294, 11248), (1611329798.814505, 1305, 7758), (1611329798.829604, 1321, 7647), (1611329798.840176, 1337, 4596), (1611329798.846631, 1355, 1563), (1611329798.858868, 1361, 225)]

class EventTest(unittest.TestCase):
    def test_basicparameters(self):
        event = Event(data1)
        self.assertEqual(798, event.getStartDistance())
        self.assertEqual(423, event.getEndDistance())
        self.assertAlmostEqual(0.7151870727539062, event.getDuration())
        self.assertEqual(423, event.getMinDistance())
        self.assertEqual(798, event.getMaxDistance())
        self.assertEqual(375, event.getMeasuredDistance())
        self.assertEqual(75, event.getMinStrength())
        self.assertEqual(18524, event.getMaxStrength())
        self.assertEqual('TOWARDS', event.getDirection())

    def test_basicparameters2(self):
        event = Event(data2)
        self.assertEqual(818, event.getStartDistance())
        self.assertEqual(465, event.getEndDistance())
        self.assertAlmostEqual(0.835341, event.getDuration())
        self.assertEqual(450, event.getMinDistance())
        self.assertEqual(831, event.getMaxDistance())
        self.assertEqual(381, event.getMeasuredDistance())
        self.assertEqual(72, event.getMinStrength())
        self.assertEqual(17412, event.getMaxStrength())
        self.assertEqual('TOWARDS', event.getDirection())


    def test_speedFromMaxStrength(self):
        event = Event(data1)
        self.assertEqual({'numberOfPoints': 14, 'r2': 0.9990421892816421, 'speed': -36.886153846153775}, event.getSpeedFromMaxStrength())

    def test_speedFromMaxStrength2(self):
        event = Event(data2)
        self.assertEqual({'numberOfPoints': 17, 'r2': 0.99865011795843, 'speed': -36.60351444152695}, event.getSpeedFromMaxStrength(plot=True))

    def test_speedFromMaxStrength3(self):
        event = Event(data3)
        self.assertEqual({'numberOfPoints': 17, 'r2': 0.99865011795843, 'speed': -36.60351444152695}, event.getSpeedFromMaxStrength(plot=True))

    def test_speedFromMaxStrength4(self):
        event = Event(data4)
        self.assertEqual({'numberOfPoints': 17, 'r2': 0.99865011795843, 'speed': -36.60351444152695},
                         event.getSpeedFromMaxStrength(plot=True))

    def test_speedFromMaxStrength5(self):
        event = Event(data5)
        self.assertEqual({'numberOfPoints': 17, 'r2': 0.99865011795843, 'speed': -36.60351444152695},
                         event.getSpeedFromMaxStrength(plot=True))

    def test_speedFromMaxStrength6(self):
        event = Event(data6)
        self.assertEqual({'numberOfPoints': 17, 'r2': 0.99865011795843, 'speed': -36.60351444152695},
                         event.getSpeedFromMaxStrength(plot=True))
if __name__ == '__main__':
    unittest.main()
